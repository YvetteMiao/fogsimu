/* 
 * $Id$
 * This file is a part of the Arakhne Foundation Classes, http://www.arakhne.org/afc
 * 
 * Copyright (c) 2019 The original authors, and other authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package fr.ciadlab.fogsimu.scenario

import fr.ciadlab.fogsimu.config.Configuration
import fr.ciadlab.fogsimu.environment.FogZone
import java.util.List
import org.arakhne.afc.gis.maplayer.MapElementLayer
import org.arakhne.afc.gis.maplayer.TreeMapElementLayer
import org.arakhne.afc.gis.road.layer.RoadNetworkLayer
import org.arakhne.afc.simulation.framework.framework1d.environment.Spawner1d
import org.arakhne.afc.simulation.framework.framework1d.scenario.SimulationScenarioFactory1d

/**
 * Reader of Simulation scenario.
 *
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
class FogSimulationScenarioFactory extends SimulationScenarioFactory1d<Configuration> {

	new {
		super(new XmlReader)
	}

	/** Read fog areas from the simulation configuration and include them into the simulation scenario.
	 * 
	 * @param configuration the simulation configuration.
	 * @param loadedRoads the layer that contains the loaded roads.
	 * @param containers the collection of layers that must be included into the simulation. 
	 */
	def loadFogAreas(configuration : Configuration, loadedRoads : RoadNetworkLayer,
		containers : List<MapElementLayer<?>>) : void {
		var fogLayer = new TreeMapElementLayer<FogZone>
		for (obj : configuration.fogZones) {
			var fogZone = new FogZone(obj.ID, obj.x, obj.y, obj.radius, obj.visibility)
			fogLayer.addMapElement(fogZone)
		}
		if (!fogLayer.isEmpty) {
			containers.add(fogLayer)
		}
	}

	override buildSimulationScenario(configuration : Configuration, loadedRoads : RoadNetworkLayer,
		containers : List<MapElementLayer<?>>, spawners : List<Spawner1d>) : void {
		super.buildSimulationScenario(configuration, loadedRoads, containers, spawners)
		loadFogAreas(configuration, loadedRoads, containers)
	}


}
