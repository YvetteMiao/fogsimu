/* 
 * $Id$
 * This file is a part of the Arakhne Foundation Classes, http://www.arakhne.org/afc
 * 
 * Copyright (c) 2019 The original authors, and other authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package fr.ciadlab.fogsimu.scenario

import fr.ciadlab.fogsimu.config.Configuration
import fr.ciadlab.fogsimu.config.FogZoneConfig
import fr.ciadlab.fogsimu.environment.FogZone
import java.io.File
import org.arakhne.afc.simulation.framework.framework1d.scenario.AbstractXmlConfigurationReader1d
import org.w3c.dom.Document

import static extension org.arakhne.afc.inputoutput.xml.XMLUtil.*

/**
 * Reader of xml file.
 *
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
class XmlReader extends AbstractXmlConfigurationReader1d<Configuration> {

	/** Read a simulation configuration
	 *
	 * @param file the file to read.
	 * @return the configuration.
	 */
	override loadXmlConfiguration(file : File, xml : Document, config : Configuration) {
		super.loadXmlConfiguration(file, xml, config)
		for (child : xml.getElementsFromPath("scenario", "fogZones", "fogZone")) {
			var fog = new FogZoneConfig
			fog.ID = child.getAttributeUUID("id")
			fog.x = child.getAttributeDoubleWithDefault(0.0, "x")
			fog.y = child.getAttributeDoubleWithDefault(0.0, "y")
			fog.type = child.getAttributeClassWithDefault(null, "class") as Class<? extends FogZone>
			fog.radius = child.getAttributeDoubleWithDefault(500.0, "radius")
			fog.visibility = child.getAttributeDoubleWithDefault(50.0, "visibility")
			config.fogZones += fog
		}
	}
	
	def createConfigurationInstance : Configuration {
		new Configuration
	}
	
}
